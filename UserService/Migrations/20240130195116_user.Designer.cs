// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserService.Data;

#nullable disable

namespace UserService.Migrations
{
    [DbContext(typeof(AddDbContext))]
    [Migration("20240130195116_user")]
    partial class user
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserService.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2024, 1, 28, 23, 51, 15, 368, DateTimeKind.Local).AddTicks(3285),
                            TotalCost = 134000.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2024, 1, 29, 23, 51, 15, 368, DateTimeKind.Local).AddTicks(3306),
                            TotalCost = 130000.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateTime(2024, 1, 30, 23, 51, 15, 368, DateTimeKind.Local).AddTicks(3307),
                            TotalCost = 105000.0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("UserService.Data.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 2,
                            ProductId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 3,
                            ProductId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 3,
                            ProductId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            OrderId = 3,
                            ProductId = 7,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("UserService.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "tPczQr3sG8EJCrwh/k7oQewjcUWwMUwPZAwWcgc/HA9Tb6TECuonXxx8FbHuvzJJNBRlF3+4cGSnzOsRMA6Y9g==",
                            Salt = new byte[] { 235, 154, 183, 150, 113, 158, 160, 75, 105, 189, 56, 115, 13, 122, 186, 65, 139, 191, 203, 44, 104, 200, 247, 250, 251, 89, 202, 96, 209, 65, 49, 230 },
                            Token = "someTokenValue1",
                            Username = "Пользователь1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "ZpJHq9bQs4t/QVetz2MQeMxDspKSQqzOfAb51Tn0vjEHWoj47tBvjgyJEPX6AhDP43ZkyYwcmSRN8dzVZ5/ZSg==",
                            Salt = new byte[] { 37, 201, 81, 198, 64, 166, 55, 38, 250, 66, 201, 57, 104, 49, 148, 129, 217, 159, 30, 194, 44, 209, 194, 171, 19, 90, 132, 181, 241, 166, 18, 129 },
                            Token = "someTokenValue2",
                            Username = "Пользователь2"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "741v76BR4K1bIeslDJEDskP+czADNkPZNyw5L4XcPTZ6AxRoK5N7GXHKVlnxV6gxF0I0/o7L88+0agAczZqTBg==",
                            Salt = new byte[] { 99, 237, 207, 89, 70, 21, 68, 97, 174, 138, 231, 87, 162, 61, 14, 224, 152, 41, 115, 55, 177, 91, 161, 88, 197, 101, 244, 244, 115, 110, 90, 191 },
                            Token = "someTokenValue3",
                            Username = "zz"
                        });
                });

            modelBuilder.Entity("UserService.Data.Order", b =>
                {
                    b.HasOne("UserService.Data.User", "User")
                        .WithMany("Order")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserService.Data.OrderItem", b =>
                {
                    b.HasOne("UserService.Data.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("UserService.Data.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("UserService.Data.User", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
